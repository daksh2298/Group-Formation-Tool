image: gradle:4.6-jdk8-alpine

stages:
  - build
  - test
  - deploy

before_script:
  #  - echo `pwd` # debug
  #  - echo "$CI_BUILD_NAME, $CI_BUILD_REF_NAME $CI_BUILD_STAGE" # debug
  - export GRADLE_USER_HOME=`pwd`/.gradle

cache:
  paths:
    - .gradle/wrapper
    - .gradle/caches

build:
  stage: build
  script:
    - ./gradlew build -info
    #- gradle build -info
  artifacts:
    paths:
      - build/libs/*.jar

test:
  stage: test
  script:
    - ./gradlew test -info

deploy_dev:
  stage: deploy
  image: ruby:2.3
  script:
    - apt-get update -qy
    - apt-get install -y ruby-dev
    - gem install dpl
    - dpl --provider=heroku --app=$HEROKU_APPNAME --api-key=$HEROKU_API_KEY
  environment:
    name: dev
    url: $HEROKU_APP_HOST


#For staging development
#Development:
## image: ruby: 2.4
## stage: deploy
## before_script:
## - gem install dpl
## - wget -qO- https://cli-assets.heroku.com/install-ubuntu.sh | sh
## script:
## - dpl --provider = heroku --app = $ HEROKU_APPNAME --api-key = $ HEROKU_APIKEY
## - export HEROKU_API_KEY = $ HEROKU_APIKEY
## - heroku run --app $ HEROKU_APPNAME migrate
## environment:
## name: development
## url: https://admodb-dev.herokuapp.com

# The part that is integrated with heroku when deployment


#Production:
#  image: ruby:2.3
#  stage: deploy
#  before_script:
#    - gem install dpl
#    - wget -qO- https://cli-assets.heroku.com/install-ubuntu.sh | sh
#  script:
#    - asl --provider = Heroku --app = $ HEROKU_APPNAME --api-key = $ HEROKU_APIKEY
#    - export HEROKU_API_KEY = $ HEROKU_APIKEY
#    - Heroku run --app $ HEROKU_APPNAME migrate
#  environment:
#    name: production
#    url: $HEROKU_APP_HOST
